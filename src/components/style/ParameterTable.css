.Table-Container {
  overflow-y: auto;
  z-index: 0;
}

/* MUI Table */
.MuiTableRow-root{
  background-color: var(--backgroundSecondary) !important;

}
/* .MuiTableRow-root *:not(.PrivateSwitchBase-input,.Expandable-Area){
  
} */

.Mui-TableBodyCell-DetailPanel{
  background-color: var(--backgroundSecondary) !important;
}
.MuiToolbar-root{
  background-color: var(--backgroundPrimary) !important;
}
.MuiTableContainer-root tr{
  background-color: var(--backgroundSecondary) !important;
}
.MuiTableContainer-root td{
  background-color: transparent !important;
}

.MuiTableContainer-root tr:hover td{
  background-color: var(--ornamentalBorder) !important;
}
.MuiInputBase-input::-webkit-input-placeholder{
  color: var(--foregroundSecondary) !important;
  opacity: 1 !important;
}
.MuiTablePagination-root{
  color: var(--foregroundPrimary) !important;
}
.css-78trlr-MuiButtonBase-root-MuiIconButton-root{
  color: var(--foregroundSecondary) !important;
}

.MuiTablePagination-root input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;

}
.MuiFormHelperText-sizeMedium{
  color: var(--foregroundSecondary) !important;
}
.Mui-TableHeadCell-Content-Actions svg{
  color: var(--foregroundPrimary) !important;
  fill: var(--foregroundPrimary) !important;
}

table, th, td {
  border-color: var(--ornamentalBorder) !important;
  color: var(--foregroundPrimary) !important;

}

table svg{
  color: var(--foregroundSecondary) !important;
}


.Expandable-Left {
  display: flex;
  flex-grow: 1;
  flex-basis: 0;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: calc(var(--Row-Height) * 10);
  max-height: 100%;
  grid-area: Expandable-Left;
}
.Name,
.Rig_Family {
  grid-area: ParameterName;
  flex-grow: 1;
  overflow-y: auto;
  overflow-x: hidden;
}

.Rig_Family_Description,
.Description {
  grid-area: RigFamilyDescription;
  flex-grow: 2;
  overflow-y: auto;
  overflow-x: hidden;
}
.Expandable-Left > div {
  width: 100%;
}
.Expandable-Right {
  display: grid;
  height: 350px;
  max-height: 100%;
  grid-template-columns: 1fr 2fr 3.5fr 3fr;
  grid-template-rows: repeat(5, minmax(0, 1fr));
  gap: 0px 0px;
  grid-auto-flow: row;
  grid-template-areas:
    "ParameterUnit ParameterCreated ParameterPossibleValues Images"
    "ParameterDecimals ParameterCreatedBy ParameterPossibleValues Images"
    "ParameterMin ParameterLastModified ParameterPossibleValues Images"
    "ParameterMax ParameterLastModifiedBy ParameterPossibleValues Images"
    "ParameterType ParameterComment ParameterPossibleValues Images";
  grid-area: Expandable-Right;
}
.Images {
  grid-area: Images;

  height: 100%;
  width: 100%;
  overflow: hidden;
}
.Images fieldset {
  max-height: none !important;
}

.Comment-Container {
  grid-area: Comment;
}

.PossibleValues {
  grid-area: PossibleValues;
}
.Possible_Values fieldset {
  max-height: 100%;
  overflow-y: auto;
}

.Unit {
  grid-area: ParameterUnit;
}
.Decimals {
  grid-area: ParameterDecimals;
}
.Min {
  grid-area: ParameterMin;
}
.Max {
  grid-area: ParameterMax;
}
.Type {
  grid-area: ParameterType;
}
.Created {
  grid-area: ParameterCreated;
}
.Created_By {
  grid-area: ParameterCreatedBy;
}
.Last_Modified {
  grid-area: ParameterLastModified;
}
.Modified_By {
  grid-area: ParameterLastModifiedBy;
}
.Comment {
  grid-area: ParameterComment;
}
.Possible_Values {
  grid-area: ParameterPossibleValues;
}
.Images {
  grid-area: Images;
}
