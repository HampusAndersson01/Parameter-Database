.Table-Container {
    z-index: 0;
    max-height: calc(100vh - var(--Toolbar-Height));
    height: calc(100vh - var(--Toolbar-Height));
}

:root {
    --tableHeight: calc(100vh - var(--Toolbar-Height) - (56px * 2) - 15px);
}

/* MUI Table */
.MuiTableRow-root {
    background-color: var(--backgroundSecondary) !important;
}
.Mui-TableBodyCell-DetailPanel {
    background-color: var(--backgroundSecondary) !important;
}
.MuiToolbar-root {
    background-color: var(--backgroundPrimary) !important;
}
.MuiPaper-root {
    max-height: calc(100vh - var(--Toolbar-Height)) !important;
}
.MuiTableContainer-root {
    max-height: var(--tableHeight) !important;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
.MuiTableContainer-root tr {
    background-color: var(--backgroundSecondary) !important;
}
.MuiTableContainer-root td {
    background-color: transparent !important;
}

.MuiTableContainer-root tr:hover td {
    background-color: var(--ornamentalBorder) !important;
}
.MuiInputBase-input::-webkit-input-placeholder {
    color: var(--foregroundSecondary) !important;
    opacity: 1 !important;
}
.MuiTablePagination-root {
    color: var(--foregroundPrimary) !important;
}
.css-78trlr-MuiButtonBase-root-MuiIconButton-root {
    color: var(--foregroundSecondary) !important;
}

.MuiTablePagination-root input[type='number']::-webkit-inner-spin-button {
    -webkit-appearance: none;
}
.MuiFormHelperText-sizeMedium {
    color: var(--foregroundSecondary) !important;
}
.Mui-TableHeadCell-Content-Actions svg {
    color: var(--foregroundPrimary) !important;
    fill: var(--foregroundPrimary) !important;
}

table,
th,
td {
    border-color: var(--ornamentalBorder) !important;
    color: var(--foregroundPrimary) !important;
}

table svg {
    color: var(--foregroundSecondary) !important;
}

.deleteIcon svg {
    color: var(--alerts) !important;
}

.Expandable-Left {
    display: flex;
    flex-grow: 1;
    flex-basis: 0;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: calc(var(--Row-Height) * 10);
    max-height: 100%;
    grid-area: Expandable-Left;
}
.Name,
.Rig_Family {
    grid-area: ParameterName;
    flex-grow: 1;
    overflow-y: auto;
    overflow-x: hidden;
}

.Rig_Family_Description,
.Description {
    grid-area: RigFamilyDescription;
    flex-grow: 2;
    overflow-y: auto;
    overflow-x: hidden;
}
.Expandable-Left > div {
    width: 100%;
}
.Expandable-Right {
    display: grid;
    height: 350px;
    max-height: 100%;
    grid-template-columns: 1fr 2fr 3.5fr 3fr;
    grid-template-rows: repeat(5, minmax(0, 1fr));
    gap: 0px 0px;
    grid-auto-flow: row;
    grid-template-areas:
        'ParameterUnit ParameterCreated ParameterPossibleValues Images'
        'ParameterDecimals ParameterCreatedBy ParameterPossibleValues Images'
        'ParameterMin ParameterLastModified ParameterPossibleValues Images'
        'ParameterMax ParameterLastModifiedBy ParameterPossibleValues Images'
        'ParameterType ParameterComment ParameterPossibleValues Images';
    grid-area: Expandable-Right;
}
.Images {
    grid-area: Images;

    height: 100%;
    width: 100%;
    overflow: hidden;
}
.Images fieldset {
    max-height: none !important;
}

.Comment-Container {
    grid-area: Comment;
}

.PossibleValues {
    grid-area: PossibleValues;
}
.Possible_Values fieldset {
    max-height: 100%;
    overflow-y: auto;
}

.Unit {
    grid-area: ParameterUnit;
}
.Decimals {
    grid-area: ParameterDecimals;
}
.Min {
    grid-area: ParameterMin;
}
.Max {
    grid-area: ParameterMax;
}
.Type {
    grid-area: ParameterType;
}
.Created {
    grid-area: ParameterCreated;
}
.Created_By {
    grid-area: ParameterCreatedBy;
}
.Last_Modified {
    grid-area: ParameterLastModified;
}
.Modified_By {
    grid-area: ParameterLastModifiedBy;
}
.Comment {
    grid-area: ParameterComment;
}
.Possible_Values {
    grid-area: ParameterPossibleValues;
}
.Images {
    grid-area: Images;
}
.deleteConfirmModal {
    padding: 1rem;
    text-align: center;
    color: var(--foregroundPrimary) !important;
    position: absolute;
    top: 50%;
    left: 50%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.deleteConfirmModal button {
    cursor: pointer;
}
.deleteConfirmModal button:hover {
    background-color: var(--ornamentalBorder);
    color: var(--blueBrand);
}
body {
    position: relative;
}
.deleteConfirmModal > .MuiBox-root {
    background-color: var(--backgroundSecondary);
    border-radius: 10px;
    padding: 1rem;
}
.reloadSelectButtons {
    display: flex;
    justify-content: flex-start;
    width: 100%;
    gap: 1rem;
}
/* On reloadButtons:hover svg keyframe animation to rotate*/

.reloadButtons:hover svg {
    animation: rotate 1.5s linear infinite;
}
@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(-360deg);
    }
}