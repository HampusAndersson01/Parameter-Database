{"version":3,"sources":["components/SearchField.tsx","components/ParameterTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchField","props","_useState","useState","_useState2","_slicedToArray","searchValue","setSearchValue","_useState3","_useState4","isDropdownOpen","setIsDropdownOpen","_useState5","_useState6","showLabel","setShowLabel","_useState7","_useState8","selectedIndex","setSelectedIndex","handleCategorySelect","value","handleHoverEnter","event","parseInt","target","id","handleHoverLeave","getFilteredData","filteredData","data","filter","toLowerCase","includes","searchForData","console","log","onSearch","listRef","React","useRef","createElement","className","placeholder","SearchIcon","onClick","onChange","onFocus","setTimeout","onBlur","onKeyDown","key","length","current","children","scrollIntoView","block","behavior","ref","map","index","toString","onMouseEnter","onMouseLeave","ParameterTable","expandedRows","setExpandedRows","currentImage","setCurrentImage","useEffect","newCurrentImage","rows","forEach","row","images","currentPage","setCurrentPage","rowsPerPage","_useState9","_useState10","allDataLoaded","setAllDataLoaded","tableRef","_useState11","_useState12","isSticky","setIsSticky","window","addEventListener","handleScroll","removeEventListener","scrollTop","document","documentElement","scrollHeight","clientHeight","prevPage","rowLength","_loop","i","prevState","_objectSpread","_defineProperty","top","getBoundingClientRect","slice","Fragment","isExpanded","rowId","concat","_toConsumableArray","parentElement","tagName","classList","toggle","HandleClickParameter","ExpandMoreIcon","name","description","unit_name","rigfamily_name","decimals","min","max","datatype","colSpan","src","image_url","alt","ArrowBackIcon","ArrowForwardIcon","comment","App","setData","setFilteredData","searchString","setSearchString","searchField","setSearchField","filterData","fetch","then","response","json","catch","error","finally","Array","from","Set","field","imageArray","image_urls","urls","split","names","image_name","fill","descriptions","image_description","push","updateRows","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ee5b8066.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./SearchField.css\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nfunction SearchField(props: {\r\n  data: (string | null)[];\r\n  placeholder: string;\r\n  id?: string;\r\n  onSearch?: any;\r\n}) {\r\n  const [searchValue, setSearchValue] = useState<string>(\"\");\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState<boolean>(false);\r\n  const [showLabel, setShowLabel] = useState<boolean>(false);\r\n  const [selectedIndex, setSelectedIndex] = useState<number>(0);\r\n  \r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchValue(event.target.value);\r\n    if (!isDropdownOpen){\r\n      setIsDropdownOpen(true);\r\n      setSelectedIndex(-1);\r\n    }\r\n  };\r\n\r\n  const handleCategorySelect = (value: string) => {\r\n    setSearchValue(value);\r\n    setIsDropdownOpen(false);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setShowLabel(true);\r\n    setTimeout(() => {\r\n      setIsDropdownOpen(true);\r\n    }, 100);\r\n  };\r\n\r\n  const handleBlur = (event: any) => {\r\n    setTimeout(() => {\r\n      if (event.target.value === \"\") {\r\n        setShowLabel(false);\r\n      }\r\n      setIsDropdownOpen(false);\r\n    }, 100);\r\n  };\r\n  const handleClick = (event: any) => {\r\n    searchForData();\r\n  };\r\n  const handleKeyDown = (event: any) => {\r\n    if (event.key === \"Enter\") {\r\n      if(isDropdownOpen){\r\n        if(selectedIndex === -1){\r\n          setIsDropdownOpen(false);\r\n          searchForData();\r\n        }else{\r\n          handleCategorySelect(getFilteredData()[selectedIndex]);\r\n        }\r\n      }else{\r\n        searchForData();\r\n      }\r\n    }\r\n    if (event.key === \"Escape\") {\r\n      setIsDropdownOpen(false);\r\n    }\r\n    if (event.key === \"ArrowDown\") {\r\n      if (selectedIndex < getFilteredData().length - 1) {\r\n        setSelectedIndex(selectedIndex + 1);\r\n        if (listRef.current) {\r\n          \r\n            listRef.current.children[selectedIndex + 1].scrollIntoView({block: \"end\", behavior: \"smooth\"});\r\n        }\r\n        \r\n      }\r\n    }\r\n    if (event.key === \"ArrowUp\") {\r\n      if (selectedIndex > 0) {\r\n        setSelectedIndex(selectedIndex - 1);\r\n      }\r\n    }\r\n\r\n  };\r\n  const handleHoverEnter = (event: any) => {\r\n    setSelectedIndex(parseInt(event.target.id));\r\n  };\r\n  const handleHoverLeave = (event: any) => {\r\n    setSelectedIndex(-1);\r\n  };\r\n\r\n\r\n  function getFilteredData() {\r\n    const filteredData = props.data.filter((value) => value !== null) as string[];\r\n    if (searchValue === \"\") {\r\n      return filteredData;\r\n    }\r\n    return filteredData.filter((value) => value.toLowerCase().includes(searchValue.toLowerCase()));\r\n\r\n  }\r\n\r\n  function searchForData() {\r\n    //TODO Add search functionality\r\n    console.log(\"Search for: \" + searchValue);\r\n    props.onSearch(searchValue);\r\n\r\n  }\r\n\r\n  const listRef = React.useRef<HTMLUListElement>(null);\r\n  return (\r\n\r\n    <div className=\"SearchField-Container \" id={props.id}>\r\n      <fieldset className=\"Search-Container\">\r\n        <legend\r\n          className={\r\n            showLabel ? \"SearchField-Label show-label\" : \"SearchField-Label\"\r\n          }\r\n        >\r\n          {props.placeholder}\r\n        </legend>\r\n        <SearchIcon className=\"Search-Icon\" onClick={handleClick}></SearchIcon>\r\n        <input\r\n          className=\"SearchField-Input\"\r\n          onChange={handleInputChange}\r\n          placeholder={showLabel ? \"\" : props.placeholder}\r\n          value={searchValue}\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          onKeyDown={handleKeyDown}\r\n        ></input>\r\n        <div \r\n        className=\"Dropdown-Container-Div\"\r\n        \r\n        >\r\n          {isDropdownOpen && (\r\n            <ul className=\"Dropdown-Container\" ref={listRef}>\r\n              {getFilteredData().map((value,index) => (\r\n                <li \r\n                className={selectedIndex === index ? \"selected\" : \"\"}\r\n                id={index.toString()}\r\n                onMouseEnter={handleHoverEnter} \r\n                onMouseLeave={handleHoverLeave} \r\n                key={value} \r\n                onClick={() => handleCategorySelect(value)}>\r\n                  {value}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchField;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./ParameterTable.css\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport { table } from \"console\";\r\n\r\n\r\ninterface Image {\r\n  image_url: string;\r\n  image_name: string | null;\r\n  image_description: string | null;\r\n}\r\nexport interface TableRowProps {\r\n  id: number;\r\n  name: string;\r\n  description: string | null;\r\n  unit_name: string | null;\r\n  unit_description: string | null;\r\n  rigfamily_name: string | null;\r\n  rigfamily_description: string | null;\r\n  decimals: number | null;\r\n  min: number | null;\r\n  max: number | null;\r\n  datatype: string | null;\r\n  created_by: string | null;\r\n  modified_by: string | null;\r\n  creation_date: string | null;\r\n  modified_date: string | null;\r\n  active?: boolean;\r\n  images?: Image[] | null;\r\n  comment: string | null;\r\n  }\r\ninterface ImageState {\r\n  [key: number]: number;\r\n}\r\n\r\n\r\nfunction ParameterTable(props: { rows: TableRowProps[] }) {\r\n  const [expandedRows, setExpandedRows] = useState<number[]>([]);\r\n  const [currentImage, setCurrentImage] = useState<ImageState>({});\r\n\r\n  // settCurrentImage on data load\r\n  useEffect(() => {\r\n    const newCurrentImage: ImageState = {};\r\n    props.rows.forEach((row) => {\r\n      if (row.images) {\r\n        newCurrentImage[row.id] = 0;\r\n      }\r\n    });\r\n    setCurrentImage(newCurrentImage);\r\n  }, [props.rows]);\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(50);\r\n  const [allDataLoaded, setAllDataLoaded] = useState(false);\r\n\r\n  const tableRef = useRef<HTMLTableElement>(null);\r\n  const [isSticky, setIsSticky] = useState(false);\r\n\r\n  // Load more data when the current page changes\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n  \r\n  const handleScroll = () => {\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n  \r\n    // If user has scrolled to the bottom of the page and there is more data to load, update the current page\r\n    if (scrollTop + clientHeight >= scrollHeight && !allDataLoaded) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentPage * rowsPerPage >= props.rows.length) {\r\n      setAllDataLoaded(true);\r\n    }\r\n  }, [currentPage, rowsPerPage, props.rows.length]);\r\n    \r\n  const HandleClickParameter = (event: any, id: number) => {\r\n    const isExpanded = expandedRows.includes(id);\r\n    if (isExpanded) {\r\n      setExpandedRows(expandedRows.filter((rowId) => rowId !== id));\r\n    } else {\r\n      setExpandedRows([...expandedRows, id]);\r\n    }\r\n    if (event.target.parentElement.tagName === \"TR\") {\r\n      event.target.parentElement.classList.toggle(\"Active-Row\");\r\n    } else {\r\n      event.target.parentElement.parentElement.classList.toggle(\"Active-Row\");\r\n    }\r\n  };\r\n\r\n  const HandlePrevButton = (event: any, id: number) => {\r\n    // decrease this id currentImage\r\n    if (currentImage[id] != 0) {\r\n      setCurrentImage((prevState) => ({\r\n        ...prevState,\r\n        [id]: prevState[id] - 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const HandleNextButton = (event: any, id: number, length: number) => {\r\n    // increase this id currentImage\r\n    if (currentImage[id] != length - 1) {\r\n      setCurrentImage((prevState) => ({\r\n        ...prevState,\r\n        [id]: prevState[id] + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rowLength = props.rows.length;\r\n    for (let i = 0; i < rowLength; i++) {\r\n      setCurrentImage((prevState) => ({\r\n        ...prevState,\r\n        [props.rows[i].id]: 0,\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const top = tableRef.current ? tableRef.current.getBoundingClientRect().top : 0;\r\n      setIsSticky(top < 0);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Table-Container\">\r\n      <table ref={tableRef}>\r\n        <thead className={isSticky ? \"sticky\" : \"\"}>\r\n          <tr>\r\n            <th>{props.rows.length}</th>\r\n            <th id=\"TableName\">Name</th>\r\n            <th id=\"TableDescription\">Description</th>\r\n            <th id=\"TableUnit\">Unit</th>\r\n            <th id=\"TableRig\">Rig Family</th>\r\n            <th id=\"TableDecimals\">Decimals</th>\r\n            <th id=\"TableMin\">Min</th>\r\n            <th id=\"TableMax\">Max</th>\r\n            <th id=\"TableDataType\">Datatype</th>\r\n          </tr>\r\n        </thead >\r\n        <tbody>\r\n          {props.rows.slice(0, currentPage * rowsPerPage).map((row) => (\r\n            <>\r\n              <tr\r\n                key={row.id}\r\n                onClick={(event) => HandleClickParameter(event, row.id)}\r\n              >\r\n                <td className=\"Table-Arrow\">\r\n                  <ExpandMoreIcon></ExpandMoreIcon>\r\n                </td>\r\n                <td className=\"\">{row.name}</td>\r\n                <td>{row.description}</td>\r\n                <td>{row.unit_name}</td>\r\n                <td>{row.rigfamily_name}</td>\r\n                <td>{row.decimals}</td>\r\n                <td>{row.min}</td>\r\n                <td>{row.max}</td>\r\n                <td>{row.datatype}</td>\r\n              </tr>\r\n  \r\n              <tr\r\n                key={row.id + \"expandable\"}\r\n                className={\r\n                  expandedRows.includes(row.id)\r\n                    ? \"Expandable-Row Active-Row\"\r\n                    : \"Expandable-Row\"\r\n                }\r\n              >\r\n                <td colSpan={12}>\r\n                  <div className=\"Expandable-Area\">\r\n                    <div className=\"Images-Container\">\r\n                      {row.images &&\r\n                        row.images.length > 0 && (\r\n                          <img\r\n                            src={row.images[currentImage[row.id]] ? row.images[currentImage[row.id]].image_url : \"\"}\r\n                            alt=\"error\"\r\n                          />\r\n                        )}\r\n                      {row.images && row.images.length > 1 && (\r\n                        <div className=\"Image-Nav\">\r\n                          <ArrowBackIcon\r\n                            className={\r\n                              currentImage[row.id] === 0\r\n                                ? \"Image-Nav-Button Disabled\"\r\n                                : \"Image-Nav-Button\"\r\n                            }\r\n                            onClick={(event) => HandlePrevButton(event, row.id)}\r\n                          />\r\n                        \r\n                          <p>\r\n                            {currentImage[row.id] + 1}/{row.images.length}\r\n                          </p>\r\n                          <ArrowForwardIcon\r\n                            className={\r\n                              currentImage[row.id] === row.images.length - 1\r\n                                ? \"Image-Nav-Button Disabled\"\r\n                                : \"Image-Nav-Button\"\r\n                            }\r\n                            onClick={(event) =>\r\n                              HandleNextButton(\r\n                                event,\r\n                                row.id,\r\n                                row.images ? row.images.length : 0\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"Comment-Container\">\r\n                      <p>{row.comment}</p>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default ParameterTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport SearchField from \"./components/SearchField\";\r\nimport ParameterTable, {TableRowProps}from \"./components/ParameterTable\";\r\nimport { Button } from \"@mui/material\";\r\n\r\n\r\n\r\ntype dataModel = {\r\n  id: number;\r\n  name: string;\r\n  description: string | null;\r\n  datatype: string | null;\r\n  decimals: number | null;\r\n  min: number | null;\r\n  max: number | null;\r\n  creation_date: null | string;\r\n  modified_date: string | null;\r\n  created_by: string | null;\r\n  modified_by: string | null;\r\n  comment: null | string;\r\n  unit_name: string | null;\r\n  unit_description: string | null; \r\n  rigfamily_name: string | null;\r\n  rigfamily_description: string | null;\r\n  image_name: string | null;\r\n  image_description: string | null;\r\n  image_urls: string | null;\r\n}[];\r\n\r\n\r\n\r\nfunction App() {\r\n  const [data, setData] = useState<dataModel>([]);\r\n  const [filteredData, setFilteredData] = useState<dataModel>([]);\r\n  const [searchString, setSearchString] = useState<string>(\"\");\r\n  const [searchField, setSearchField] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n      fetch(\"http://localhost:3000/parameters\")\r\n        .then((response) => response.json())\r\n        .then((data) => setData(data))\r\n        .catch((error) => console.log(error))\r\n        .finally(() => console.log(\"data loaded\"));\r\n     \r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredData(filterData(data));\r\n  }, [data]);\r\n\r\n  function updateRows(data: dataModel): TableRowProps[] {\r\n    return data.map((row) => {\r\n      const imageArray = [];\r\n      if (row.image_urls) {\r\n        const urls = row.image_urls.split(\";\");\r\n        const names = row.image_name\r\n          ? row.image_name.split(\";\")\r\n          : Array(urls.length).fill(null);\r\n        const descriptions = row.image_description \r\n          ? row.image_description.split(\";\") \r\n          : Array(urls.length).fill(null);\r\n  \r\n        for (let i = 0; i < urls.length; i++) {\r\n          imageArray.push({\r\n            image_url: urls[i],\r\n            image_name: names[i],\r\n            image_description: descriptions[i],\r\n          });\r\n        }\r\n      }\r\n      return {\r\n        ...row,\r\n        images: imageArray,\r\n      };\r\n    });\r\n  }\r\n  \r\n  function filterData(data: dataModel) {\r\n    return data.filter((row) => {\r\n      if (searchString === \"\") {\r\n        return true;\r\n      }\r\n      switch (searchField) {\r\n        case \"parameter\":\r\n          return row.name.toLowerCase().includes(searchString.toLowerCase());\r\n        case \"description\":\r\n          return row.description ? row.description.toLowerCase().includes(searchString.toLowerCase()) : false;\r\n        case \"unit\":\r\n          return row.unit_name ? row.unit_name.toLowerCase().includes(searchString.toLowerCase()) : false;\r\n        case \"RIG_FAM\":\r\n          return row.rigfamily_name ? row.rigfamily_name.toLowerCase().includes(searchString.toLowerCase()) : false;\r\n        case \"comment\":\r\n          return row.comment ? row.comment.toLowerCase().includes(searchString.toLowerCase()) : false;\r\n        default:\r\n          return true;\r\n      }\r\n    }\r\n    );\r\n  }\r\n  function handleSearch(value: string,field: string) {\r\n    setSearchString(value);\r\n    setSearchField(field);\r\n    console.log(value, field);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFilteredData(filterData(data));\r\n  }, [searchString, searchField]);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <SearchField\r\n          id=\"ParameterSearch\"\r\n          data={Array.from(new Set(data.map((row) => row.name)))}\r\n          placeholder=\"Parameter\"\r\n          onSearch={(searchString: string) =>  handleSearch(searchString, \"parameter\")}\r\n        />\r\n        <SearchField\r\n          id=\"DescriptionSearch\"\r\n          data={Array.from(new Set(data.map((row) => row.description)))}\r\n          placeholder=\"Description\"\r\n        />\r\n        <SearchField\r\n          id=\"UnitSearch\"\r\n          data={Array.from(new Set(data.map((row) => row.unit_name)))}\r\n          placeholder=\"Unit\"\r\n        />\r\n        <SearchField\r\n          id=\"RigFamSearch\"\r\n          data={Array.from(new Set(data.map((row) => row.rigfamily_name)))}\r\n          placeholder=\"RIG_FAM\"\r\n        />\r\n        <SearchField\r\n          id=\"CommentSearch\"\r\n          data={Array.from(new Set(data.map((row) => row.comment).filter((name) => name != null))) as unknown as string[]}\r\n          placeholder=\"Comment\"\r\n        />\r\n      </header>\r\n      <ParameterTable rows={updateRows(filteredData)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}